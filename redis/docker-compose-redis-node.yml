version: "3.0"      #docker-compose的版本号
 
#networks:    
#  redis:
#    driver: bridge
 
services:           #所有服务的入口  固定写法
  redis_node_1:     #自定义服务名
    image: redis:6.0.16     #我们所需要运行的镜像，没有的话，会自定为我们下载
    container_name: redis_node_1  #镜像运行后的容器名，自定义
    ports:
      - 6379:6379           #宿主机的6379映射容器内部的6379端口
    volumes:  #目录挂载 。分号 ： 右边代表容器内部的目录，分号左边表示宿主机的目录，
      - ~/app/redis_node_1/conf/redis.conf:/redis.conf
      - ~/app/redis_node_1/data:/data
    command: bash -c "redis-server /redis.conf"  #容器启动后，运行的命令
    #networks:
    #  - redis
 
  redis_node_2:
    image: redis:6.0.16
    container_name: redis_node_2
    ports:
      - 6380:6379
    volumes:
      - ~/app/redis_node_2/conf/redis.conf:/redis.conf
      - ~/app/redis_node_2/data:/data
    command: bash -c "redis-server /redis.conf  --slaveof redis_node_1 6379"
 
  redis_node_3:
    image: redis:6.0.16
    container_name: redis_node_3
    ports:
      - 6381:6379
    volumes:
      - ~/app/redis_node_3/conf/redis.conf:/redis.conf
      - ~/app/redis_node_3/data:/data
    command: bash -c "redis-server /redis.conf --slaveof redis_node_1 6379"
